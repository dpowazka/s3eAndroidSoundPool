/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
/*
 * This file contains the automatically generated loader-side
 * functions that form part of the extension.
 *
 * This file is awlays compiled into all loaders but compiles
 * to nothing if this extension is not enabled in the loader
 * at build time.
 */
#include "soundpool_autodefs.h"
#include "s3eEdk.h"
#include "soundpool.h"
//Declarations of Init and Term functions
extern s3eResult soundpoolInit();
extern void soundpoolTerminate();


void soundpoolRegisterExt()
{
    /* fill in the function pointer struct for this extension */
    void* funcPtrs[9];
    funcPtrs[0] = (void*)sound_pool__init;
    funcPtrs[1] = (void*)sound_pool__load;
    funcPtrs[2] = (void*)sound_pool__play;
    funcPtrs[3] = (void*)sound_pool__pause;
    funcPtrs[4] = (void*)sound_pool__resume;
    funcPtrs[5] = (void*)sound_pool__set_looping;
    funcPtrs[6] = (void*)sound_pool__stop;
    funcPtrs[7] = (void*)sound_pool__unload;
    funcPtrs[8] = (void*)sound_pool__release;

    /*
     * Flags that specify the extension's use of locking and stackswitching
     */
    int flags[9] = { 0 };

    /*
     * Register the extension
     */
s3eEdkRegister("soundpool", funcPtrs, sizeof(funcPtrs), flags, soundpoolInit, soundpoolTerminate, 0);
}

#if !defined S3E_BUILD_S3ELOADER

#if defined S3E_EDK_USE_STATIC_INIT_ARRAY
int soundpoolStaticInit()
{
    void** p = g_StaticInitArray;
    void* end = p + g_StaticArrayLen;
    while (*p) p++;
    if (p < end)
        *p = (void*)&soundpoolRegisterExt;
    return 0;
}

int g_soundpoolVal = soundpoolStaticInit();

#elif defined S3E_EDK_USE_DLLS
S3E_EXTERN_C S3E_DLL_EXPORT void RegisterExt()
{
    soundpoolRegisterExt();
}
#endif

#endif
